name: 🛠️ Building library

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop


jobs:
  build:
    name: 🛠️ Build and test
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     dotnet-version: ['3.0', '3.1.x', '5.0.x' ]

    steps:
      - name: 👨‍💻 Check-out code
        uses: actions/checkout@v3

      - name: 👨‍🔧 Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: 🔍 Enable problem matchers
        run: echo "::add-matcher::.github/matchers/dotnet.json"

      - name: 🦸‍♂️ Restore steriods
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: 🎒 Load packages
        run: dotnet restore
    
      - name: 🛠️ Build code
        run: dotnet build --configuration Release --no-restore

      - name: 🫣 Testing code
        run: dotnet test --configuration Release -v minimal --no-build --logger GitHubActions '/p:CollectCoverage=true;CoverletOutputFormat="json,lcov,cobertura";MergeWith=${{github.workspace}}/coverage.json;CoverletOutput=${{github.workspace}}/coverage' -- RunConfiguration.CollectSourceInformation=true

      - name: 📝 Code Coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.23
          reportgenerator -reports:${{github.workspace}}/coverage.cobertura.xml -targetdir:${{github.workspace}}/report -reporttypes:MarkdownSummaryGithub -filefilters:-*.g.cs -verbosity:Warning
          sed -i 's/# Summary/## 📝 Code Coverage/g' ${{github.workspace}}/report/SummaryGithub.md
          sed -i 's/## Coverage/### 📝 Code Coverage details/g' ${{github.workspace}}/report/SummaryGithub.md
          cat ${{github.workspace}}/report/*.md >> $GITHUB_STEP_SUMMARY

  publish:
    name: 📦 Publish nuget library
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') && github.event_name == 'push'
    needs: [build]
    steps:
      - name: 👨‍💻 Check-out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 👨‍🔧 Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: 🔍 Enable problem matchers
        run: echo "::add-matcher::.github/matchers/dotnet.json"

      - name: 🦸‍♂️ Restore steriods
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: 🛠️ Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: 🕵️ Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          additionalArguments: /updateprojectfiles

      - name: 🎒 Load packages
        run: dotnet restore

      - name: 🛠️ Build code
        run: dotnet build --configuration Release --no-restore

      - name: 📦 Pack Sonos.Base
        run: dotnet pack --configuration Release --no-build --no-restore ./src/Sonos.Base/Sonos.Base.csproj
      - name: ✈️ Publish Sonos.Base to nuget.org
        run: dotnet nuget push ./src/Sonos.Base/bin/Release/Sonos.Base.*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

      - name: 📦 Pack Sonos.Base.Events.Http
        run: dotnet pack --configuration Release --no-build --no-restore ./src/Sonos.Base.Events.Http/Sonos.Base.Events.Http.csproj
      - name: ✈️ Publish Sonos.Base.Events.Http to nuget.org
        run: dotnet nuget push ./src/Sonos.Base.Events.Http/bin/Release/Sonos.Base.*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
