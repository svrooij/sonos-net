/*
 * Sonos-net ContentDirectoryService event parsing
 *
 * File is generated by [@svrooij/sonos-docs](https://github.com/svrooij/sonos-api-docs/tree/main/generator/sonos-docs)
 *
 * Repository https://github.com/svrooij/sonos-net
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Sonos.Base.Events.Http.Models;

using Sonos.Base.Services;


#nullable enable
/// <summary>
/// ContentDirectory is set to might emit these properties in events
/// </summary>
public partial class ContentDirectoryEvent: ContentDirectoryService.IContentDirectoryEvent {
    public bool? Browseable { get; init; }

    public string? ContainerUpdateIDs { get; init; }

    public string? FavoritePresetsUpdateID { get; init; }

    public string? FavoritesUpdateID { get; init; }

    public int? RadioFavoritesUpdateID { get; init; }

    public int? RadioLocationUpdateID { get; init; }

    public string? RecentlyPlayedUpdateID { get; init; }

    public string? SavedQueuesUpdateID { get; init; }

    public string? SearchCapabilities { get; init; }

    public bool? ShareIndexInProgress { get; init; }

    public string? ShareIndexLastError { get; init; }

    public string? ShareListUpdateID { get; init; }

    public string? SortCapabilities { get; init; }

    public int? SystemUpdateID { get; init; }

    public string? UserRadioUpdateID { get; init; }

    internal static ContentDirectoryEvent? FromDictionary(Dictionary<string, string>? dic)
    {
        if (dic is null) {
            return null;
        }
        return new ContentDirectoryEvent {
            Browseable = dic.TryGetBool(nameof(Browseable)),
            ContainerUpdateIDs = dic.TryGetString(nameof(ContainerUpdateIDs)),
            FavoritePresetsUpdateID = dic.TryGetString(nameof(FavoritePresetsUpdateID)),
            FavoritesUpdateID = dic.TryGetString(nameof(FavoritesUpdateID)),
            RadioFavoritesUpdateID = dic.TryGetInt(nameof(RadioFavoritesUpdateID)),
            RadioLocationUpdateID = dic.TryGetInt(nameof(RadioLocationUpdateID)),
            RecentlyPlayedUpdateID = dic.TryGetString(nameof(RecentlyPlayedUpdateID)),
            SavedQueuesUpdateID = dic.TryGetString(nameof(SavedQueuesUpdateID)),
            SearchCapabilities = dic.TryGetString(nameof(SearchCapabilities)),
            ShareIndexInProgress = dic.TryGetBool(nameof(ShareIndexInProgress)),
            ShareIndexLastError = dic.TryGetString(nameof(ShareIndexLastError)),
            ShareListUpdateID = dic.TryGetString(nameof(ShareListUpdateID)),
            SortCapabilities = dic.TryGetString(nameof(SortCapabilities)),
            SystemUpdateID = dic.TryGetInt(nameof(SystemUpdateID)),
            UserRadioUpdateID = dic.TryGetString(nameof(UserRadioUpdateID)),
        };
    }
}

