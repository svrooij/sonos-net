/*
 * Sonos-net DevicePropertiesService event parsing
 *
 * File is generated by [@svrooij/sonos-docs](https://github.com/svrooij/sonos-api-docs/tree/main/generator/sonos-docs)
 *
 * Repository https://github.com/svrooij/sonos-net
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Sonos.Base.Events.Http.Models;

using Sonos.Base.Services;


#nullable enable
/// <summary>
/// DeviceProperties is set to might emit these properties in events
/// </summary>
public partial class DevicePropertiesEvent: DevicePropertiesService.IDevicePropertiesEvent {
    public bool? AirPlayEnabled { get; init; }

    public bool? AutoplayIncludeLinkedZones { get; init; }

    public string? AutoplayRoomUUID { get; init; }

    public string? AutoplaySource { get; init; }

    public bool? AutoplayUseVolume { get; init; }

    public int? AutoplayVolume { get; init; }

    public string? AvailableRoomCalibration { get; init; }

    public int? BehindWifiExtender { get; init; }

    public string? ButtonLockState { get; init; }

    public int? ChannelFreq { get; init; }

    public string? ChannelMapSet { get; init; }

    public string? ConfigMode { get; init; }

    public string? Configuration { get; init; }

    public string? CopyrightInfo { get; init; }

    public string? DisplaySoftwareVersion { get; init; }

    public bool? EthLink { get; init; }

    public string? ExtraInfo { get; init; }

    public int? Flags { get; init; }

    public string? HardwareVersion { get; init; }

    public bool? HasConfiguredSSID { get; init; }

    public bool? HdmiCecAvailable { get; init; }

    public string? HouseholdID { get; init; }

    public int? HTAudioIn { get; init; }

    public int? HTBondedZoneCommitState { get; init; }

    public bool? HTForwardEnabled { get; init; }

    public int? HTFreq { get; init; }

    public string? HTSatChanMapSet { get; init; }

    public string? Icon { get; init; }

    public bool? Invisible { get; init; }

    public string? IPAddress { get; init; }

    public bool? IsIdle { get; init; }

    public bool? IsZoneBridge { get; init; }

    public bool? KeepGrouped { get; init; }

    public string? LastChangedPlayState { get; init; }

    public string? LEDState { get; init; }

    public string? MACAddress { get; init; }

    public int? MicEnabled { get; init; }

    public string? MoreInfo { get; init; }

    public int? Orientation { get; init; }

    public int? RoomCalibrationState { get; init; }

    public string? SatRoomUUID { get; init; }

    public int? SecureRegState { get; init; }

    public string? SerialNumber { get; init; }

    public string? SettingsReplicationState { get; init; }

    public string? SoftwareVersion { get; init; }

    public bool? SupportsAudioClip { get; init; }

    public bool? SupportsAudioIn { get; init; }

    public string? TargetRoomName { get; init; }

    public bool? TVConfigurationError { get; init; }

    public int? VoiceConfigState { get; init; }

    public bool? WifiEnabled { get; init; }

    public bool? WirelessLeafOnly { get; init; }

    public int? WirelessMode { get; init; }

    public string? ZoneName { get; init; }

    internal static DevicePropertiesEvent? FromDictionary(Dictionary<string, string>? dic)
    {
        if (dic is null) {
            return null;
        }
        return new DevicePropertiesEvent {
            AirPlayEnabled = dic.TryGetBool(nameof(AirPlayEnabled)),
            AutoplayIncludeLinkedZones = dic.TryGetBool(nameof(AutoplayIncludeLinkedZones)),
            AutoplayRoomUUID = dic.TryGetString(nameof(AutoplayRoomUUID)),
            AutoplaySource = dic.TryGetString(nameof(AutoplaySource)),
            AutoplayUseVolume = dic.TryGetBool(nameof(AutoplayUseVolume)),
            AutoplayVolume = dic.TryGetInt(nameof(AutoplayVolume)),
            AvailableRoomCalibration = dic.TryGetString(nameof(AvailableRoomCalibration)),
            BehindWifiExtender = dic.TryGetInt(nameof(BehindWifiExtender)),
            ButtonLockState = dic.TryGetString(nameof(ButtonLockState)),
            ChannelFreq = dic.TryGetInt(nameof(ChannelFreq)),
            ChannelMapSet = dic.TryGetString(nameof(ChannelMapSet)),
            ConfigMode = dic.TryGetString(nameof(ConfigMode)),
            Configuration = dic.TryGetString(nameof(Configuration)),
            CopyrightInfo = dic.TryGetString(nameof(CopyrightInfo)),
            DisplaySoftwareVersion = dic.TryGetString(nameof(DisplaySoftwareVersion)),
            EthLink = dic.TryGetBool(nameof(EthLink)),
            ExtraInfo = dic.TryGetString(nameof(ExtraInfo)),
            Flags = dic.TryGetInt(nameof(Flags)),
            HardwareVersion = dic.TryGetString(nameof(HardwareVersion)),
            HasConfiguredSSID = dic.TryGetBool(nameof(HasConfiguredSSID)),
            HdmiCecAvailable = dic.TryGetBool(nameof(HdmiCecAvailable)),
            HouseholdID = dic.TryGetString(nameof(HouseholdID)),
            HTAudioIn = dic.TryGetInt(nameof(HTAudioIn)),
            HTBondedZoneCommitState = dic.TryGetInt(nameof(HTBondedZoneCommitState)),
            HTForwardEnabled = dic.TryGetBool(nameof(HTForwardEnabled)),
            HTFreq = dic.TryGetInt(nameof(HTFreq)),
            HTSatChanMapSet = dic.TryGetString(nameof(HTSatChanMapSet)),
            Icon = dic.TryGetString(nameof(Icon)),
            Invisible = dic.TryGetBool(nameof(Invisible)),
            IPAddress = dic.TryGetString(nameof(IPAddress)),
            IsIdle = dic.TryGetBool(nameof(IsIdle)),
            IsZoneBridge = dic.TryGetBool(nameof(IsZoneBridge)),
            KeepGrouped = dic.TryGetBool(nameof(KeepGrouped)),
            LastChangedPlayState = dic.TryGetString(nameof(LastChangedPlayState)),
            LEDState = dic.TryGetString(nameof(LEDState)),
            MACAddress = dic.TryGetString(nameof(MACAddress)),
            MicEnabled = dic.TryGetInt(nameof(MicEnabled)),
            MoreInfo = dic.TryGetString(nameof(MoreInfo)),
            Orientation = dic.TryGetInt(nameof(Orientation)),
            RoomCalibrationState = dic.TryGetInt(nameof(RoomCalibrationState)),
            SatRoomUUID = dic.TryGetString(nameof(SatRoomUUID)),
            SecureRegState = dic.TryGetInt(nameof(SecureRegState)),
            SerialNumber = dic.TryGetString(nameof(SerialNumber)),
            SettingsReplicationState = dic.TryGetString(nameof(SettingsReplicationState)),
            SoftwareVersion = dic.TryGetString(nameof(SoftwareVersion)),
            SupportsAudioClip = dic.TryGetBool(nameof(SupportsAudioClip)),
            SupportsAudioIn = dic.TryGetBool(nameof(SupportsAudioIn)),
            TargetRoomName = dic.TryGetString(nameof(TargetRoomName)),
            TVConfigurationError = dic.TryGetBool(nameof(TVConfigurationError)),
            VoiceConfigState = dic.TryGetInt(nameof(VoiceConfigState)),
            WifiEnabled = dic.TryGetBool(nameof(WifiEnabled)),
            WirelessLeafOnly = dic.TryGetBool(nameof(WirelessLeafOnly)),
            WirelessMode = dic.TryGetInt(nameof(WirelessMode)),
            ZoneName = dic.TryGetString(nameof(ZoneName)),
        };
    }
}

