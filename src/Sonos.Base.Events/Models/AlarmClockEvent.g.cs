/*
 * Sonos-net AlarmClockService event parsing
 *
 * File is generated by [@svrooij/sonos-docs](https://github.com/svrooij/sonos-api-docs/tree/main/generator/sonos-docs)
 *
 * Repository https://github.com/svrooij/sonos-net
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Sonos.Base.Events.Models;

using Sonos.Base.Services;


#nullable enable
/// <summary>
/// AlarmClock is set to might emit these properties in events
/// </summary>
public partial class AlarmClockEvent: AlarmClockService.IAlarmClockEvent {
    public string? AlarmListVersion { get; init; }

    public string? DailyIndexRefreshTime { get; init; }

    public string? DateFormat { get; init; }

    public string? TimeFormat { get; init; }

    public int? TimeGeneration { get; init; }

    public string? TimeServer { get; init; }

    public string? TimeZone { get; init; }

    internal static AlarmClockEvent? FromDictionary(Dictionary<string, string>? dic)
    {
        if (dic is null) {
            return null;
        }
        return new AlarmClockEvent {
            AlarmListVersion = dic.TryGetString(nameof(AlarmListVersion)),
            DailyIndexRefreshTime = dic.TryGetString(nameof(DailyIndexRefreshTime)),
            DateFormat = dic.TryGetString(nameof(DateFormat)),
            TimeFormat = dic.TryGetString(nameof(TimeFormat)),
            TimeGeneration = dic.TryGetInt(nameof(TimeGeneration)),
            TimeServer = dic.TryGetString(nameof(TimeServer)),
            TimeZone = dic.TryGetString(nameof(TimeZone)),
        };
    }
}

