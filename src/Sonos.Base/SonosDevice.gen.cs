/*
 * Sonos-net - SonosDevice
 *
 * File is generated by [@svrooij/sonos-docs](https://github.com/svrooij/sonos-api-docs/tree/main/generator/sonos-docs)
 *
 * Repository https://github.com/svrooij/sonos-net
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Sonos.Base;

using Sonos.Base.Services;
public partial class SonosDevice
{
    private AlarmClockService? _alarmclock;

    /// <summary>
    /// Auto initialized AlarmClock Service for this device
    /// </summary>
    public AlarmClockService AlarmClockService
    {
        get
        {
            if (_alarmclock is null)
            {
                _alarmclock = new AlarmClockService(ServiceOptions);
            }
            return _alarmclock;
        }
    }
    private AudioInService? _audioin;

    /// <summary>
    /// Auto initialized AudioIn Service for this device
    /// </summary>
    public AudioInService AudioInService
    {
        get
        {
            if (_audioin is null)
            {
                _audioin = new AudioInService(ServiceOptions);
            }
            return _audioin;
        }
    }
    private AVTransportService? _avtransport;

    /// <summary>
    /// Auto initialized AVTransport Service for this device
    /// </summary>
    public AVTransportService AVTransportService
    {
        get
        {
            if (_avtransport is null)
            {
                _avtransport = new AVTransportService(ServiceOptions);
            }
            return _avtransport;
        }
    }
    private ConnectionManagerService? _connectionmanager;

    /// <summary>
    /// Auto initialized ConnectionManager Service for this device
    /// </summary>
    public ConnectionManagerService ConnectionManagerService
    {
        get
        {
            if (_connectionmanager is null)
            {
                _connectionmanager = new ConnectionManagerService(ServiceOptions);
            }
            return _connectionmanager;
        }
    }
    private ContentDirectoryService? _contentdirectory;

    /// <summary>
    /// Auto initialized ContentDirectory Service for this device
    /// </summary>
    public ContentDirectoryService ContentDirectoryService
    {
        get
        {
            if (_contentdirectory is null)
            {
                _contentdirectory = new ContentDirectoryService(ServiceOptions);
            }
            return _contentdirectory;
        }
    }
    private DevicePropertiesService? _deviceproperties;

    /// <summary>
    /// Auto initialized DeviceProperties Service for this device
    /// </summary>
    public DevicePropertiesService DevicePropertiesService
    {
        get
        {
            if (_deviceproperties is null)
            {
                _deviceproperties = new DevicePropertiesService(ServiceOptions);
            }
            return _deviceproperties;
        }
    }
    private GroupManagementService? _groupmanagement;

    /// <summary>
    /// Auto initialized GroupManagement Service for this device
    /// </summary>
    public GroupManagementService GroupManagementService
    {
        get
        {
            if (_groupmanagement is null)
            {
                _groupmanagement = new GroupManagementService(ServiceOptions);
            }
            return _groupmanagement;
        }
    }
    private GroupRenderingControlService? _grouprenderingcontrol;

    /// <summary>
    /// Auto initialized GroupRenderingControl Service for this device
    /// </summary>
    public GroupRenderingControlService GroupRenderingControlService
    {
        get
        {
            if (_grouprenderingcontrol is null)
            {
                _grouprenderingcontrol = new GroupRenderingControlService(ServiceOptions);
            }
            return _grouprenderingcontrol;
        }
    }
    private HTControlService? _htcontrol;

    /// <summary>
    /// Auto initialized HTControl Service for this device
    /// </summary>
    public HTControlService HTControlService
    {
        get
        {
            if (_htcontrol is null)
            {
                _htcontrol = new HTControlService(ServiceOptions);
            }
            return _htcontrol;
        }
    }
    private MusicServicesService? _musicservices;

    /// <summary>
    /// Auto initialized MusicServices Service for this device
    /// </summary>
    public MusicServicesService MusicServicesService
    {
        get
        {
            if (_musicservices is null)
            {
                _musicservices = new MusicServicesService(ServiceOptions);
            }
            return _musicservices;
        }
    }
    private QPlayService? _qplay;

    /// <summary>
    /// Auto initialized QPlay Service for this device
    /// </summary>
    public QPlayService QPlayService
    {
        get
        {
            if (_qplay is null)
            {
                _qplay = new QPlayService(ServiceOptions);
            }
            return _qplay;
        }
    }
    private QueueService? _queue;

    /// <summary>
    /// Auto initialized Queue Service for this device
    /// </summary>
    public QueueService QueueService
    {
        get
        {
            if (_queue is null)
            {
                _queue = new QueueService(ServiceOptions);
            }
            return _queue;
        }
    }
    private RenderingControlService? _renderingcontrol;

    /// <summary>
    /// Auto initialized RenderingControl Service for this device
    /// </summary>
    public RenderingControlService RenderingControlService
    {
        get
        {
            if (_renderingcontrol is null)
            {
                _renderingcontrol = new RenderingControlService(ServiceOptions);
            }
            return _renderingcontrol;
        }
    }
    private SystemPropertiesService? _systemproperties;

    /// <summary>
    /// Auto initialized SystemProperties Service for this device
    /// </summary>
    public SystemPropertiesService SystemPropertiesService
    {
        get
        {
            if (_systemproperties is null)
            {
                _systemproperties = new SystemPropertiesService(ServiceOptions);
            }
            return _systemproperties;
        }
    }
    private VirtualLineInService? _virtuallinein;

    /// <summary>
    /// Auto initialized VirtualLineIn Service for this device
    /// </summary>
    public VirtualLineInService VirtualLineInService
    {
        get
        {
            if (_virtuallinein is null)
            {
                _virtuallinein = new VirtualLineInService(ServiceOptions);
            }
            return _virtuallinein;
        }
    }
    private ZoneGroupTopologyService? _zonegrouptopology;

    /// <summary>
    /// Auto initialized ZoneGroupTopology Service for this device
    /// </summary>
    public ZoneGroupTopologyService ZoneGroupTopologyService
    {
        get
        {
            if (_zonegrouptopology is null)
            {
                _zonegrouptopology = new ZoneGroupTopologyService(ServiceOptions);
            }
            return _zonegrouptopology;
        }
    }

    private void DisposeServices()
    {
        _alarmclock?.Dispose();
        _audioin?.Dispose();
        _avtransport?.Dispose();
        _connectionmanager?.Dispose();
        _contentdirectory?.Dispose();
        _deviceproperties?.Dispose();
        _groupmanagement?.Dispose();
        _grouprenderingcontrol?.Dispose();
        _htcontrol?.Dispose();
        _musicservices?.Dispose();
        _qplay?.Dispose();
        _queue?.Dispose();
        _renderingcontrol?.Dispose();
        _systemproperties?.Dispose();
        _virtuallinein?.Dispose();
        _zonegrouptopology?.Dispose();
    }
}
