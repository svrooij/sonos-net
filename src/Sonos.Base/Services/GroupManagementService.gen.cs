/*
 * Sonos-net GroupManagementService
 *
 * File is generated by [@svrooij/sonos-docs](https://github.com/svrooij/sonos-api-docs/tree/main/generator/sonos-docs)
 *
 * Repository https://github.com/svrooij/sonos-net
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Sonos.Base.Services;

using System.Threading;
using System.Threading.Tasks;

/// <summary>
/// GroupManagementService  - Services related to groups
/// </summary>
public partial class GroupManagementService : SonosBaseService
{
    /// <summary>
    /// Create a new GroupManagementService
    /// </summary>
    /// <param name="options">Service options</param>
    public GroupManagementService(SonosServiceOptions options) : base("GroupManagement", "/GroupManagement/Control", "/GroupManagement/Event", options) { }


    /// <summary>
    /// AddMember
    /// </summary>
    /// <param name="request">Body payload</param>
    /// <param name="cancellationToken">CancellationToken</param>
    /// <returns>AddMemberResponse</returns>
    public Task<AddMemberResponse> AddMember(AddMemberRequest request, CancellationToken cancellationToken = default) => ExecuteRequest<AddMemberRequest, AddMemberResponse>(request, cancellationToken);

    /// <summary>
    /// RemoveMember
    /// </summary>
    /// <param name="request">Body payload</param>
    /// <param name="cancellationToken">CancellationToken</param>
    /// <returns>Success boolean</returns>
    public Task<bool> RemoveMember(RemoveMemberRequest request, CancellationToken cancellationToken = default) => ExecuteRequest<RemoveMemberRequest>(request, cancellationToken);

    /// <summary>
    /// ReportTrackBufferingResult
    /// </summary>
    /// <param name="request">Body payload</param>
    /// <param name="cancellationToken">CancellationToken</param>
    /// <returns>Success boolean</returns>
    public Task<bool> ReportTrackBufferingResult(ReportTrackBufferingResultRequest request, CancellationToken cancellationToken = default) => ExecuteRequest<ReportTrackBufferingResultRequest>(request, cancellationToken);

    /// <summary>
    /// SetSourceAreaIds
    /// </summary>
    /// <param name="request">Body payload</param>
    /// <param name="cancellationToken">CancellationToken</param>
    /// <returns>Success boolean</returns>
    public Task<bool> SetSourceAreaIds(SetSourceAreaIdsRequest request, CancellationToken cancellationToken = default) => ExecuteRequest<SetSourceAreaIdsRequest>(request, cancellationToken);

    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/GroupManagement/Control", "GroupManagement")]
    public class BaseRequest
    {
        [System.Xml.Serialization.XmlNamespaceDeclarations]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns = new System.Xml.Serialization.XmlSerializerNamespaces(
          new[] { new System.Xml.XmlQualifiedName("u", "urn:schemas-upnp-org:service:GroupManagement:1"), });
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/GroupManagement/Control", "GroupManagement", "AddMember")]
    public class AddMemberRequest : BaseRequest
    {
        public string MemberID { get; set; }

        public int BootSeq { get; set; }
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlType("AddMemberResponse", AnonymousType = true, Namespace = "urn:schemas-upnp-org:service:GroupManagement:1")]
    public partial class AddMemberResponse
    {
        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string CurrentTransportSettings { get; set; }

        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string CurrentURI { get; set; }

        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string GroupUUIDJoined { get; set; }

        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public bool ResetVolumeAfter { get; set; }

        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string VolumeAVTransportURI { get; set; }
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/GroupManagement/Control", "GroupManagement", "RemoveMember")]
    public class RemoveMemberRequest : BaseRequest
    {
        public string MemberID { get; set; }
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/GroupManagement/Control", "GroupManagement", "ReportTrackBufferingResult")]
    public class ReportTrackBufferingResultRequest : BaseRequest
    {
        public string MemberID { get; set; }

        public int ResultCode { get; set; }
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/GroupManagement/Control", "GroupManagement", "SetSourceAreaIds")]
    public class SetSourceAreaIdsRequest : BaseRequest
    {
        public string DesiredSourceAreaIds { get; set; }
    }
}
