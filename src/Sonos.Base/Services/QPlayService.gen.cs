/*
 * Sonos-net QPlayService
 *
 * File is generated by [@svrooij/sonos-docs](https://github.com/svrooij/sonos-api-docs/tree/main/generator/sonos-docs)
 *
 * Repository https://github.com/svrooij/sonos-net
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Sonos.Base.Services;

using System.Threading;
using System.Threading.Tasks;

/// <summary>
/// QPlayService  - Services related to Chinese Tencent Qplay service
/// </summary>
public partial class QPlayService : SonosBaseService
{
    /// <summary>
    /// Create a new QPlayService
    /// </summary>
    /// <param name="options">Service options</param>
    public QPlayService(SonosServiceOptions options) : base(SonosService.QPlay, "/QPlay/Control", "/QPlay/Event", options) { }


    /// <summary>
    /// QPlayAuth
    /// </summary>
    /// <param name="request">Body payload</param>
    /// <param name="cancellationToken">CancellationToken</param>
    /// <returns>QPlayAuthResponse</returns>
    public Task<QPlayAuthResponse> QPlayAuth(QPlayAuthRequest request, CancellationToken cancellationToken = default) => ExecuteRequest<QPlayAuthRequest, QPlayAuthResponse>(request, cancellationToken);

    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/QPlay/Control", "QPlay")]
    public class BaseRequest
    {
        [System.Xml.Serialization.XmlNamespaceDeclarations]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns = new System.Xml.Serialization.XmlSerializerNamespaces(
          new[] { new System.Xml.XmlQualifiedName("u", "urn:schemas-upnp-org:service:QPlay:1"), });
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlRoot(Namespace = "")]
    [SonosServiceRequest("/QPlay/Control", "QPlay", "QPlayAuth")]
    public class QPlayAuthRequest : BaseRequest
    {
        public string Seed { get; set; }
    }

    [System.Serializable()]
    [System.Xml.Serialization.XmlType("QPlayAuthResponse", AnonymousType = true, Namespace = "urn:schemas-upnp-org:service:QPlay:1")]
    public partial class QPlayAuthResponse
    {
        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string Code { get; set; }

        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string MID { get; set; }

        [System.Xml.Serialization.XmlElement(Namespace = "")]
        public string DID { get; set; }
    }
}
